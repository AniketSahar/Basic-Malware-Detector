import threading
import hashlib
import os
import tkinter as tk
from tkinter import ttk
root = tk.Tk()
#Global variable
malware_hashes = list(open("textvhash.txt", 'r').read().split('\n'))
virusinfo = list(open("virusinfo.txt", "r").read().split('\n'))
malware_hashes_md5 = list(open("md5HashOfVirus.unibit", 'r').read().split('\n'))

def sha256_hash(filename):
    try:
        with open(filename, "rb") as f:
            bytes = f.read()
            sha256 = hashlib.sha256(bytes).hexdigest()
        return sha256
    except:
        return 0
    
def md5_hash(filename):
    try:
        with open(filename, "rb") as f:
            bytes = f.read()
            md5 = hashlib.md5(bytes).hexdigest()
        return md5
    except:
        return 0

def malware_checker_one(pathoffile):
    hash_malware_check = sha256_hash(pathoffile)
    md5_malware_check = md5_hash(pathoffile)
    counter = 0

    for i in malware_hashes + malware_hashes_md5:
        if i == hash_malware_check or i == md5_malware_check:
            return virusinfo[counter]
        counter += 1
    return 0

virusName = []
virusPath = []


def virusScanner(path):
    dir_list = list()
    for (dirpath, dirnames, filenames) in os.walk(path):
        dir_list += [os.path.join(dirpath, file) for file in filenames]

    total_files = len(dir_list)
    scanned_files = 0
    for i in dir_list:
        print(i)
        malwareresult = malware_checker_one(i)
        if malwareresult != 0:
            virusName.append(malwareresult + " :: File :: " + i)
            virusPath.append(i)
        scanned_files += 1
        progress = int((scanned_files / total_files) * 100)
        estimated_time = ((total_files - scanned_files) * 0.1) 

#Enter the path in the scanner
virusScanner("Downloads")


